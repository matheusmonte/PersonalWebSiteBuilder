{"version":3,"sources":["resources sync /^/.//.*$","resources/profile.jpg","components/image/Image.js","components/blink/blink.js","sessions/Profile/Profile.js","components/link/link.js","sessions/SocialMedia/SocialMedia.js","config.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","resources","require","Image","className","this","props","style","src","alt","React","Component","Blink","state","show","timerID","setInterval","tick","setState","renderBlinkVisible","Profile","content","image","text","introduce","subintroduce","bio","Link","colors","color","getColor","changeColor","Math","floor","random","href","source","SocialMedia","listItems","element","link","title","PROFILE","SOCIAL_MEDIA","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dec9bd51.chunk.js","sourcesContent":["var map = {\n\t\"./profile.jpg\": 14\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 13;","module.exports = __webpack_public_path__ + \"static/media/profile.e73a0f11.jpg\";","import React from 'react';\n\n\nconst resources = require.context('../../resources', true);\n\nclass Image extends React.Component{\n    render(){\n        return(\n            <img className={this.props.style} src={resources(\"./\" + this.props.src)} alt={this.props.alt} />\n        );\n    }\n}\n\nexport default Image;   ","import React from 'react';\nimport './blink.css';\n\nclass Blink extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            show : true\n        }\n    }\n\n    componentDidMount() {\n        this.timerID = setInterval(() => this.tick(), 1000);  \n    }\n\n    tick(){\n        this.setState({\n            show : !this.state.show\n        })\n    }\n\n    renderBlinkVisible(){\n        return(\n            <div className=\"blinkCursor\"></div>\n        )\n    }\n\n    render(){\n        return(\n            <div>\n                {this.state.show ? this.renderBlinkVisible() : \"\"}\n            </div>\n        )\n    }\n\n}\n\nexport default Blink;","import React from 'react';\nimport Image from \"../../components/image/Image\";\nimport Blink from \"../../components/blink/blink\";\nimport './Profile.css';\n\n\nclass Profile extends React.Component{\n    render(){\n        return(\n            <div className=\"profile_container\">\n                <div className=\"profile_image_container\">\n                    <Image style=\"profile_image\" src={this.props.content.image} alt=\"Avatar\"/>\n                </div>\n                <div className=\"profile_text_container\">\n                    <p className=\"profile_text_introduce\">{this.props.content.text.introduce}</p>\n                    <div className=\"profile_text_sub_introduce_container\">\n                        <p>{this.props.content.text.subintroduce}</p>\n                        <Blink />\n                    </div>\n                    <p className=\"profile_text_bio\">{this.props.content.text.bio}</p>\n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default Profile;","import React from 'react';\nimport './link.css';\n\nclass Link extends React.Component{\n\n    colors = [\"red\",\"blue\",\"gray\", \"orange\"];\n\n    constructor(props){\n        super(props);\n        this.state = {\n            color : this.getColor()\n        }   \n    }\n\n    componentDidMount() {\n        setInterval(() => this.changeColor(), 2000);  \n    }\n\n    changeColor(){\n        this.setState({\n            color : this.getColor()\n        });\n    }\n\n    getColor(){\n        return this.colors[Math.floor((Math.random() * 4))];\n    }\n\n    render(){\n        return(\n            <a  className={this.state.color} href={this.props.source}> {this.props.text}</a>\n        )\n    }\n}\n\nexport default Link;","import React from \"react\";\nimport Link from \"../../components/link/link\";\nimport './SocialMedia.css';\n\nclass SocialMedia extends React.Component{\n    constructor(props){\n        super(props);\n        \n    }\n\n    render(){\n        const listItems = this.props.content.map((element) => <Link source={element.link} text={element.title} />);\n        return(\n            <div className=\"socialmedia_container\">\n                <div className=\"socialmedia_link_spot\">\n                    {listItems}\n               </div>\n            </div>\n        )\n    }\n}\n\nexport default SocialMedia;","export const PROFILE = {\n    image : \"profile.jpg\",\n    text : {\n        introduce : \"HI, I'm Matheus\",\n        subintroduce : \"Software Engineer based on Dublin\",\n        bio : \"I'm current Software Development Engineer to Amazon Web Services, \" +\n        \"I love to talk about JavaScript stuff, but I code on Java, C# and Python too. Open source lover, I contributed \" +\n        \"to some interesting projects, check on my github for more details. Seahawks (NFL) fan, Flamengo (Soccer/football) supporter and GSW (NBA) nation.\"\n    }\n};\n\nexport const SOCIAL_MEDIA = [\n    {title : \"Github\", link : \"https://github.com/matheusmonte\"},\n    {title : \"Linkedin\", link : \"https://linkedin.com/in/matheus-monte\"},\n    {title : \"Twitter\", link : \"https://twitter.com/mcsmonte\"},\n    {title : \"YouTube\", link : \"https://youtube.com/matheusmonte\"},\n    {title : \"SpeakerDeck\", link : \"https://speakerdeck.com/matheusmonte\"},\n    {title : \"Email\", link : \"mailto:matheusmonte@protonmail.com\"}\n]\n\n","import React from 'react';\nimport Profile from './sessions/Profile/Profile.js';\nimport SocialMedia from './sessions/SocialMedia/SocialMedia';\nimport './App.css';\nimport {PROFILE, SOCIAL_MEDIA} from  './config.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile content={PROFILE}/>\n      <SocialMedia content={SOCIAL_MEDIA}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}